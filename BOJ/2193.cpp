//백준 - 2193 - 이친수
// 1차원은 잣밥, 2차원으로(밑에 것) rererererererere
#include<iostream>
long int n,i=2,dp[91][2];
int main(){
	std::cin>>n;
	dp[1][0]=1; //여긴 오른쪽끝이니 0으로시작가능.
	dp[1][1]=1; 
	for(;i<=n;i++){
		dp[i][0]=dp[i-1][0]+dp[i-1][1];  // 제일왼쪽 0인경우는 밑을 구하기위해서다. 그럼 0이면 0도되고 1도되니까 두가지 경우 합.
		dp[i][1]=dp[i-1][0]; // 제일왼쪽 1이니 , 무조건 0으로 이뤄온 것들만 가능하니까.
	}
	std::cout<<dp[n][1]; // 1로 시작하니까, n이결국 제일 왼쪽을 말하는거.
}